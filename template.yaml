AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  my-first-serverless-app

  Sample SAM Template for my-first-serverless-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10

Parameters:
  TABLENAME:
    Type: String
    Description: The DynamoDB table for storing URLs information.
    Default: 'UrlsTable'

  REGIONNAME:
    Type: String
    Description: Default region for deployment.
    Default: 'us-east-1'

  DOMAINNAME:
    Type: String
    Description: Domain name.
    Default: 'example.com'

  CERTIFICATEARN:
    Description: Certificate ARN for your domain.
    Type: String
    Default: 'cert-arn-in-us-east-1'

  HOSTEDZONENAME:
    Description: Hosted zone name
    Type: String
    Default: 'example.com.'    

Resources:
  UrlsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref TABLENAME
      AttributeDefinitions:
        - AttributeName: Id
          AttributeType: S
      KeySchema:
        - AttributeName: Id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  FrontEnd:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ./frontend/dist/lambda/
      Handler: server.lambdaHandler
      Runtime: nodejs12.x
      Environment:
        Variables:
          AWS_REGION_NAME: !Ref REGIONNAME
      Events:
        RootEndPoint:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /
            Method: any

  BackendApi:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ./backend/dist/lambda/
      Handler: server.lambdaHandler
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TABLENAME
          AWS_REGION_NAME: !Ref REGIONNAME
      Policies: AmazonDynamoDBFullAccess
      Events:
        EverythingElse:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /{proxy+}
            Method: any

  APIDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      CertificateArn: !Ref CERTIFICATEARN
      DomainName: !Ref DOMAINNAME
  
  APIBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !Ref APIDomainName
      RestApiId: !Ref ServerlessRestApi
      Stage: Prod

  APIDomain:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Ref HOSTEDZONENAME
      RecordSets:
      - Name: !Ref DOMAINNAME
        Type: A
        AliasTarget:
          DNSName: !GetAtt APIDomainName.DistributionDomainName
          HostedZoneId: Z2FDTNDATAQYW2 # static ID for CloudFront aliases

# Outputs:
#   ProdDataEndpoint:
#     Description: 'API Prod stage endpoint'
#     Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/'
